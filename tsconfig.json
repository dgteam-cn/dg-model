{
    "compilerOptions": {
        /* Basic Options */
        "target": "es5", // 编译后的目标版本 [ 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018', 'ESNEXT' ]
        "module": "commonjs", // 应用的模块标准 [ 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'ESNext' ]
        "lib": [ "es6", "dom" ], // 指定包含在编译中的库文件
        "allowJs": false, // 是否编译 JS 文件 - 默认 false
        "checkJs": false, // 是否检查 JS 文件的错误 - 默认 false
        // "jsx": "preserve", // 指定 JSX 代码开发环境 [ 'preserve', 'react-native', or 'react' ]
        "declaration": true, // 编译时是否生成对应的 d.ts 声明文件 - 默认 false
        // "declarationMap": false, // 编译时是否为 d.ts 声明文件生成 map 文件 - 默认 false
        // "sourceMap": true, // 生否生成 map 文件
        // "outFile": "./dist/main.js", // 输出并合并文件
        "outDir": "./dist",
        /* 将输出结构重定向到目录 */
        // "rootDir": "src/**/*",                /* 指定输入文件的根目录。用于使用--outDir控制输出目录结构。 */
        // "composite": true,                     /* 启用项目编译 */
        // "removeComments": true, // 编译后是否删除注释
        // "noEmit": true,                        /* Do not emit outputs. */
        // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
        // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

        /* Strict Type-Checking Options */
        "strict": true,
        /* Enable all strict type-checking options. */
        // "noImplicitAny": true, // 强制检查变量类型
        // "strictNullChecks": true, // 严格检查 null 与 undefined
        // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
        // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
        // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
        // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
        // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

        /* Additional Checks */
        // "noUnusedLocals": true, // 检查是否有声明了但未使用的变量，一般 ESLint 会包含此功能
        // "noUnusedParameters": true, // 检查函数中是否有声明了但未使用的参数，一般 ESLint 会包含此功能
        // "noImplicitReturns": true, // 检查函数是否有返回值
        // "noFallthroughCasesInSwitch": true, // 检查所有 switech 语句中的 case 是否有使用 break 跳出

        /* Module Resolution Options */
        // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
        // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
        "typeRoots": [ "./node_modules/@types" ],                       /* List of folders to include type definitions from. */
        // "types": [],                           /* Type declaration files to be included in compilation. */
        // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */

        /* Source Map Options */
        // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

        /* Experimental Options */
        // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
        // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
    },
    "include": [
        "src/**/*.ts"//, "src/hash.ts"
    ],
    "exclude": [
        "node_modules", "distt", "**/*.spec.ts"
    ]
}